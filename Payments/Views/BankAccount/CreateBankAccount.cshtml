@model Payments.ViewModels.BankAccount.CreatureBankAccountModel

@{
    ViewBag.Title = "CreateBankAccount";
}

<h2>Добавить счет</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <input type="hidden" value="@Model.ApplicationUserId" name="ApplicationUserId" />
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.NumberCard, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.NumberCard, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
           placeholder = "Номер банковской карты"
                }
            })
            @Html.ValidationMessageFor(model => model.NumberCard, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Name, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
           placeholder = "Наименование счета"
                }
            })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Добавить счет" class="btn btn-primary" />
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
